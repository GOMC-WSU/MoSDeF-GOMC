import pdb

import numpy as np

from mbuild.compound import Compound
from mbuild.atom import Atom

def load_pdb(filename):
    """
    """
    component = Compound()

    with open(filename, 'r') as pdb_file:
        for line in pdb_file:
            if line[:6] in ("ATOM  ", "HETATM"):
                kind = line[12:16].strip()
                x = float(line[30:38])
                y = float(line[38:46])
                z = float(line[46:54])
                component.add(Atom(kind, np.array([x, y, z])))
            """
            elif "CONECT" in line:
                pdb.set_trace()
                atom1_idx = int(line[7:12])
                atom1 = ???
                for idx in (12, 17, 22, 27):
                    try:
                        atom2 = ???
                        component.add(Bond('CONECT', atom1,atom2))
                    except:
                        pass
            """
            elif "END" in line:
                break

    return component

def write_pdb(compound, filename='mbuild.pdb'):
    """
    """
    with open(filename, 'w') as pdb_file:
        pdb_file.write("COMPND    MBUILD COMPONENT\n")
        pdb_file.write("AUTHOR    GENERATED BY MBUILD\n")
        for serial_number, atom in enumerate(compound.atoms()):
            names = "{:<6s}{:5d} {:4s}{:1s}{:3s}{:1s}{:4d}{:1s}   ".format(
                    'HETATM', serial_number + 1, atom.kind, ' ', 'LIG', ' ', 1, ' ')
            x, y, z = atom.pos
            numbers = "{:8.3f}{:8.3f}{:8.3f}{:6.3f}{:6.3f}      ".format(
                    x, y, z, 1.00, 0.00)
            end = "{:2s}{:2s}\n".format(atom.kind[0], ' ')
            pdb_file.write(''.join([names, numbers, end]))
        pdb_file.write("END")

if __name__ == "__main__":
    component = load_pdb('ethane.pdb')
    write_pdb(component, 'ethane_out.pdb')



